{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 HelveticaNeue-Bold;}
{\colortbl;\red255\green255\blue255;\red53\green53\blue53;\red255\green255\blue255;\red53\green53\blue53;
}
{\*\expandedcolortbl;;\cssrgb\c27059\c27059\c27059;\cssrgb\c100000\c100000\c100000;\cssrgb\c27059\c27059\c27059;
}
\margl1440\margr1440\vieww11520\viewh15140\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 IBM\'a0PY0101EN\
06/24/2021\
\
\ul Lists and Tuples\

\f1\b \ulnone Tuples:\

\f0\b0 \
Tuples are ordered sequences.\
\
Ratings = (10,9,6,5,10,8,9,6,2)\
\
Can include strings, integers, and floats\
\
Tuple1 = (\'91disco\'92, 10, 1.2)\
Type(Tuple1) = tuple\
\
Can concatenate tuples by adding:\
\
Tuple2 = Tuple1 + (\'93hardrock\'94, 10)\
(\'93disco\'94, 10, 1.2, \'93hardrock\'94, 10)\
\
We can also slice tuples.\
Tuple2[0:3] = \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 (\'93disco\'94, 10, 1.2)\
\
We can use len() to get length of tuple\
\
Tuples are 
\f1\b immutable, 
\f0\b0 meaning they cannot be changed.\
\
Ratings = (10,9,6,5,10,8,9,6,2)\
Ratings1 = Ratings\
\
Ratings1: \cf4 (10,9,6,5,10,8,9,6,2)\
If we change Ratings, Ratings1 will not be changed. \
\
Ratings = (1,2,3)\
Ratings1: (10,9,6,5,10,8,9,6,2)\
\
RatingsSorted = sorted(Ratings)\
Produces a list, not a tuple.\
\
Tuples can contain other tuples as well (nesting).\
\

\f1\b \cf4 Lists:\
\

\f0\b0 Also an ordered sequence.\
Lists are like tuples, but they are 
\f1\b mutable
\f0\b0 , meaning they can be changed.\
\
L = [\'93Michael Jackson\'94, 10.1, 1982]\
L.extend([\'93pop\'94, 10])\
\
L: \cf4 [\'93Michael Jackson\'94, 10.1, 1982, \'93pop\'94, 10]\
\
\pard\pardeftab720\partightenfactor0
\cf4 L = [\'93Michael Jackson\'94, 10.1, 1982]\
\pard\pardeftab720\partightenfactor0
\cf4 L.append([\'93pop\'94, 10])\cf4 \
\
L: [\cf4 \'93Michael Jackson\'94, 10.1, 1982, [\'93pop\'94, 10]]\
\
Every time we apply a method, the list changes.\
\
We can delete an element of the list using the del() command\
Can convert a string to a list based on delimiter using split() command\
\
A = [\'93hard rock\'94, 10, 1.2]\
A = B\
\
B: [\'93hard rock\'94, 10, 1.2]\
\
Multiple names referring to the same object is known as aliasing.\
\
If we change first element of A to \'93banana\'94\'85\
A[0] = \'93banana\'94\
A: [\'93banana\'94, 10, 1.2]\
\
\'85B changes with A\
B: [\'93banana\'94, 10, 1.2]\
\
We can clone a list using the following syntax:\
\
B = A[:]\
This will allow you to change A 
\f1\b without
\f0\b0  changing B.\
\
\
\
\cf4 \
}